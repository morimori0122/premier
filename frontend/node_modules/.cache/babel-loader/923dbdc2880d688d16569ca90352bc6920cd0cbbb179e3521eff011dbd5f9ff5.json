{"ast":null,"code":"export const getFullName = shortName => {\n  const nameMap = {\n    \"Arsenal Football Club\": \"Arsenal\",\n    \"Association Football Club Bournemouth\": \"Bournemouth\",\n    \"Aston Villa Football Club\": \"Aston Villa\",\n    \"Brentford Football Club\": \"Brentford\",\n    \"Brighton and Hove Albion Football Club\": \"Brighton\",\n    \"Chelsea Football Club\": \"Chelsea\",\n    \"Crystal Palace Football Club\": \"Crystal Palace\",\n    \"Everton Football Club\": \"Everton\",\n    \"Fulham Football Club\": \"Fulham\",\n    \"Ipswich Town Football Club\": \"Ipswich\",\n    \"Leicester City Football Club\": \"Leicester\",\n    \"Liverpool Football Club\": \"Liverpool\",\n    \"Manchester City Football Club\": \"Manchester City\",\n    \"Manchester United Football Club\": \"Manchester United\",\n    \"Newcastle United Football Club\": \"Newcastle\",\n    \"Nottingham Forest Football Club\": \"Nottingham Forest\",\n    \"Southampton Football Club\": \"Southampton\",\n    \"Tottenham Hotspur Football Club\": \"Tottenham\",\n    \"West Ham United Football Club\": \"West Ham\",\n    \"Wolverhampton Wanderers Football Club\": \"Wolves\"\n  };\n  const inverseMap = Object.fromEntries(Object.entries(nameMap).map(([k, v]) => [v, k]));\n\n  // 正規化処理（FC削除、& → and）\n  const normalize = str => str.replace(\" FC\", \"\").replace(\"&\", \"and\").replace(\"AFC\", \"Association Football Club\").trim();\n  const normalized = normalize(shortName);\n\n  // マッチング強化（略称と正規化で両対応）\n  for (const [k, v] of Object.entries(nameMap)) {\n    if (normalize(v) === normalized || normalize(k) === normalized) {\n      return k; // 正式名称で返す\n    }\n  }\n  return shortName;\n};","map":{"version":3,"names":["getFullName","shortName","nameMap","inverseMap","Object","fromEntries","entries","map","k","v","normalize","str","replace","trim","normalized"],"sources":["/Users/miyashitayataiki/Desktop/premier_league/premier-react-new/src/utils/nameUtils.js"],"sourcesContent":["export const getFullName = (shortName) => {\n  const nameMap = {\n    \"Arsenal Football Club\": \"Arsenal\",\n    \"Association Football Club Bournemouth\": \"Bournemouth\",\n    \"Aston Villa Football Club\": \"Aston Villa\",\n    \"Brentford Football Club\": \"Brentford\",\n    \"Brighton and Hove Albion Football Club\": \"Brighton\",\n    \"Chelsea Football Club\": \"Chelsea\",\n    \"Crystal Palace Football Club\": \"Crystal Palace\",\n    \"Everton Football Club\": \"Everton\",\n    \"Fulham Football Club\": \"Fulham\",\n    \"Ipswich Town Football Club\": \"Ipswich\",\n    \"Leicester City Football Club\": \"Leicester\",\n    \"Liverpool Football Club\": \"Liverpool\",\n    \"Manchester City Football Club\": \"Manchester City\",\n    \"Manchester United Football Club\": \"Manchester United\",\n    \"Newcastle United Football Club\": \"Newcastle\",\n    \"Nottingham Forest Football Club\": \"Nottingham Forest\",\n    \"Southampton Football Club\": \"Southampton\",\n    \"Tottenham Hotspur Football Club\": \"Tottenham\",\n    \"West Ham United Football Club\": \"West Ham\",\n    \"Wolverhampton Wanderers Football Club\": \"Wolves\"\n  };\n\n  const inverseMap = Object.fromEntries(\n    Object.entries(nameMap).map(([k, v]) => [v, k])\n  );\n\n  // 正規化処理（FC削除、& → and）\n  const normalize = (str) =>\n    str\n      .replace(\" FC\", \"\")\n      .replace(\"&\", \"and\")\n      .replace(\"AFC\", \"Association Football Club\")\n      .trim();\n\n  const normalized = normalize(shortName);\n\n  // マッチング強化（略称と正規化で両対応）\n  for (const [k, v] of Object.entries(nameMap)) {\n    if (normalize(v) === normalized || normalize(k) === normalized) {\n      return k; // 正式名称で返す\n    }\n  }\n\n  return shortName;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,SAAS,IAAK;EACxC,MAAMC,OAAO,GAAG;IACd,uBAAuB,EAAE,SAAS;IAClC,uCAAuC,EAAE,aAAa;IACtD,2BAA2B,EAAE,aAAa;IAC1C,yBAAyB,EAAE,WAAW;IACtC,wCAAwC,EAAE,UAAU;IACpD,uBAAuB,EAAE,SAAS;IAClC,8BAA8B,EAAE,gBAAgB;IAChD,uBAAuB,EAAE,SAAS;IAClC,sBAAsB,EAAE,QAAQ;IAChC,4BAA4B,EAAE,SAAS;IACvC,8BAA8B,EAAE,WAAW;IAC3C,yBAAyB,EAAE,WAAW;IACtC,+BAA+B,EAAE,iBAAiB;IAClD,iCAAiC,EAAE,mBAAmB;IACtD,gCAAgC,EAAE,WAAW;IAC7C,iCAAiC,EAAE,mBAAmB;IACtD,2BAA2B,EAAE,aAAa;IAC1C,iCAAiC,EAAE,WAAW;IAC9C,+BAA+B,EAAE,UAAU;IAC3C,uCAAuC,EAAE;EAC3C,CAAC;EAED,MAAMC,UAAU,GAAGC,MAAM,CAACC,WAAW,CACnCD,MAAM,CAACE,OAAO,CAACJ,OAAO,CAAC,CAACK,GAAG,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK,CAACA,CAAC,EAAED,CAAC,CAAC,CAChD,CAAC;;EAED;EACA,MAAME,SAAS,GAAIC,GAAG,IACpBA,GAAG,CACAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBA,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAC3CC,IAAI,CAAC,CAAC;EAEX,MAAMC,UAAU,GAAGJ,SAAS,CAACT,SAAS,CAAC;;EAEvC;EACA,KAAK,MAAM,CAACO,CAAC,EAAEC,CAAC,CAAC,IAAIL,MAAM,CAACE,OAAO,CAACJ,OAAO,CAAC,EAAE;IAC5C,IAAIQ,SAAS,CAACD,CAAC,CAAC,KAAKK,UAAU,IAAIJ,SAAS,CAACF,CAAC,CAAC,KAAKM,UAAU,EAAE;MAC9D,OAAON,CAAC,CAAC,CAAC;IACZ;EACF;EAEA,OAAOP,SAAS;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}