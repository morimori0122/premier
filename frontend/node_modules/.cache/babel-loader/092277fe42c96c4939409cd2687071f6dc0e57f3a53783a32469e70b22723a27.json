{"ast":null,"code":"export const getFullName = shortName => {\n  const nameMap = {\n    \"Arsenal Football Club\": \"Arsenal\",\n    \"Association Football Club Bournemouth\": \"Bournemouth\",\n    \"Aston Villa Football Club\": \"Aston Villa\",\n    \"Brentford Football Club\": \"Brentford\",\n    \"Brighton and Hove Albion Football Club\": \"Brighton\",\n    \"Chelsea Football Club\": \"Chelsea\",\n    \"Crystal Palace Football Club\": \"Crystal Palace\",\n    \"Everton Football Club\": \"Everton\",\n    \"Fulham Football Club\": \"Fulham\",\n    \"Ipswich Town Football Club\": \"Ipswich\",\n    \"Leicester City Football Club\": \"Leicester\",\n    \"Liverpool Football Club\": \"Liverpool\",\n    \"Manchester City Football Club\": \"Manchester City\",\n    \"Manchester United Football Club\": \"Manchester United\",\n    \"Newcastle United Football Club\": \"Newcastle\",\n    \"Nottingham Forest Football Club\": \"Nottingham Forest\",\n    \"Southampton Football Club\": \"Southampton\",\n    \"Tottenham Hotspur Football Club\": \"Tottenham\",\n    \"West Ham United Football Club\": \"West Ham\",\n    \"Wolverhampton Wanderers Football Club\": \"Wolves\"\n  };\n\n  // 正規化関数（記号・FC等を削除して比較）\n  const normalize = str => str.toLowerCase().replace(/football club|fc|afc/gi, \"\").replace(/&/g, \"and\").replace(/[^a-z\\s]/gi, \"\").replace(/\\s+/g, \" \").trim();\n  const normalizedInput = normalize(shortName);\n  for (const [full, short] of Object.entries(nameMap)) {\n    if (normalize(full) === normalizedInput || normalize(short) === normalizedInput) {\n      return full;\n    }\n  }\n  console.warn(`⚠️ 変換失敗: ${shortName} は正式名称に一致しませんでした`);\n  return shortName; // fallback\n};","map":{"version":3,"names":["getFullName","shortName","nameMap","normalize","str","toLowerCase","replace","trim","normalizedInput","full","short","Object","entries","console","warn"],"sources":["/Users/miyashitayataiki/Desktop/premier_league/premier-react-new/src/utils/nameUtils.js"],"sourcesContent":["export const getFullName = (shortName) => {\n  const nameMap = {\n    \"Arsenal Football Club\": \"Arsenal\",\n    \"Association Football Club Bournemouth\": \"Bournemouth\",\n    \"Aston Villa Football Club\": \"Aston Villa\",\n    \"Brentford Football Club\": \"Brentford\",\n    \"Brighton and Hove Albion Football Club\": \"Brighton\",\n    \"Chelsea Football Club\": \"Chelsea\",\n    \"Crystal Palace Football Club\": \"Crystal Palace\",\n    \"Everton Football Club\": \"Everton\",\n    \"Fulham Football Club\": \"Fulham\",\n    \"Ipswich Town Football Club\": \"Ipswich\",\n    \"Leicester City Football Club\": \"Leicester\",\n    \"Liverpool Football Club\": \"Liverpool\",\n    \"Manchester City Football Club\": \"Manchester City\",\n    \"Manchester United Football Club\": \"Manchester United\",\n    \"Newcastle United Football Club\": \"Newcastle\",\n    \"Nottingham Forest Football Club\": \"Nottingham Forest\",\n    \"Southampton Football Club\": \"Southampton\",\n    \"Tottenham Hotspur Football Club\": \"Tottenham\",\n    \"West Ham United Football Club\": \"West Ham\",\n    \"Wolverhampton Wanderers Football Club\": \"Wolves\"\n  };\n\n  // 正規化関数（記号・FC等を削除して比較）\n  const normalize = (str) =>\n    str\n      .toLowerCase()\n      .replace(/football club|fc|afc/gi, \"\")\n      .replace(/&/g, \"and\")\n      .replace(/[^a-z\\s]/gi, \"\")\n      .replace(/\\s+/g, \" \")\n      .trim();\n\n  const normalizedInput = normalize(shortName);\n\n  for (const [full, short] of Object.entries(nameMap)) {\n    if (\n      normalize(full) === normalizedInput ||\n      normalize(short) === normalizedInput\n    ) {\n      return full;\n    }\n  }\n\n  console.warn(`⚠️ 変換失敗: ${shortName} は正式名称に一致しませんでした`);\n  return shortName; // fallback\n};\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,SAAS,IAAK;EACxC,MAAMC,OAAO,GAAG;IACd,uBAAuB,EAAE,SAAS;IAClC,uCAAuC,EAAE,aAAa;IACtD,2BAA2B,EAAE,aAAa;IAC1C,yBAAyB,EAAE,WAAW;IACtC,wCAAwC,EAAE,UAAU;IACpD,uBAAuB,EAAE,SAAS;IAClC,8BAA8B,EAAE,gBAAgB;IAChD,uBAAuB,EAAE,SAAS;IAClC,sBAAsB,EAAE,QAAQ;IAChC,4BAA4B,EAAE,SAAS;IACvC,8BAA8B,EAAE,WAAW;IAC3C,yBAAyB,EAAE,WAAW;IACtC,+BAA+B,EAAE,iBAAiB;IAClD,iCAAiC,EAAE,mBAAmB;IACtD,gCAAgC,EAAE,WAAW;IAC7C,iCAAiC,EAAE,mBAAmB;IACtD,2BAA2B,EAAE,aAAa;IAC1C,iCAAiC,EAAE,WAAW;IAC9C,+BAA+B,EAAE,UAAU;IAC3C,uCAAuC,EAAE;EAC3C,CAAC;;EAED;EACA,MAAMC,SAAS,GAAIC,GAAG,IACpBA,GAAG,CACAC,WAAW,CAAC,CAAC,CACbC,OAAO,CAAC,wBAAwB,EAAE,EAAE,CAAC,CACrCA,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CACpBA,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CACzBA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBC,IAAI,CAAC,CAAC;EAEX,MAAMC,eAAe,GAAGL,SAAS,CAACF,SAAS,CAAC;EAE5C,KAAK,MAAM,CAACQ,IAAI,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACV,OAAO,CAAC,EAAE;IACnD,IACEC,SAAS,CAACM,IAAI,CAAC,KAAKD,eAAe,IACnCL,SAAS,CAACO,KAAK,CAAC,KAAKF,eAAe,EACpC;MACA,OAAOC,IAAI;IACb;EACF;EAEAI,OAAO,CAACC,IAAI,CAAC,YAAYb,SAAS,kBAAkB,CAAC;EACrD,OAAOA,SAAS,CAAC,CAAC;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}